# Evaluate the model
confusion_matrix <- table(Actual = titanic$Survived, Predicted = predictions)
print(confusion_matrix)
# Install and load necessary libraries
# install.packages("rpart")
# install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
# Load the Titanic dataset
titanic <- read.csv("titanic.csv")
# Data preprocessing: Handling missing values and feature selection
# For simplicity, we drop some columns with missing data and select relevant features
# Handling missing values by removing rows with missing data
titanic <- na.omit(titanic)
# Convert 'Sex' to a factor
titanic$Sex <- as.factor(titanic$Sex)
# Create a decision tree model for predicting survival (1 for survived, 0 for not survived)
tree_model <- rpart(Survived ~ ., data = titanic, method = "class")
# Print the decision tree
print(tree_model)
# Visualize the decision tree
prp(tree_model)
# Make predictions with the decision tree model
predictions <- predict(tree_model, newdata = titanic, type = "class")
# Evaluate the model
confusion_matrix <- table(Actual = titanic$Survived, Predicted = predictions)
print(confusion_matrix)
# Install and load necessary libraries
# install.packages("rpart")
# install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
# Load the Titanic dataset
titanic <- read.csv("titanic.csv")
# Data preprocessing: Handling missing values and feature selection
# For simplicity, we drop some columns with missing data and select relevant features
titanic <- titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
# Handling missing values by removing rows with missing data
titanic <- na.omit(titanic)
# Convert 'Sex' to a factor
titanic$Sex <- as.factor(titanic$Sex)
# Create a decision tree model for predicting survival (1 for survived, 0 for not survived)
tree_model <- rpart(Survived ~ ., data = titanic, method = "class")
# Print the decision tree
print(tree_model)
# Visualize the decision tree
prp(tree_model)
# Make predictions with the decision tree model
predictions <- predict(tree_model, newdata = titanic, type = "class")
# Evaluate the model
confusion_matrix <- table(Actual = titanic$Survived, Predicted = predictions)
print(confusion_matrix)
# Install and load necessary libraries
# install.packages("rpart")
# install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
# Load the Titanic dataset
titanic <- read.csv("titanic.csv")
# Data preprocessing: Handling missing values and feature selection
# For simplicity, we drop some columns with missing data and select relevant features
titanic <- titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
# Handling missing values by removing rows with missing data
titanic <- na.omit(titanic)
# Convert 'Sex' to a factor
titanic$Sex <- as.factor(titanic$Sex)
# Create a decision tree model for predicting survival (1 for survived, 0 for not survived)
tree_model <- rpart(Survived ~ ., data = titanic, method = "class")
# Print the decision tree
print(tree_model)
# Visualize the decision tree
prp(tree_model)
# Make predictions with the decision tree model
predictions <- predict(tree_model, newdata = titanic, type = "class")
# Evaluate the model
confusion_matrix <- table(Actual = titanic$Survived, Predicted = predictions)
print(confusion_matrix)
# Install and load necessary libraries
# install.packages("rpart")
# install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
# Load the Titanic dataset
titanic <- read.csv("titanic.csv")
# Data preprocessing: Handling missing values and feature selection
# For simplicity, we drop some columns with missing data and select relevant features
titanic <- titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
# Handling missing values by removing rows with missing data
titanic <- na.omit(titanic)
# Convert 'Sex' to a factor
titanic$Sex <- as.factor(titanic$Sex)
# Create a decision tree model for predicting survival (1 for survived, 0 for not survived)
tree_model <- rpart(Survived ~ ., data = titanic, method = "class")
# Print the decision tree
print(tree_model)
# Visualize the decision tree
prp(tree_model)
# Make predictions with the decision tree model
predictions <- predict(tree_model, newdata = titanic, type = "class")
# Evaluate the model
confusion_matrix <- table(Actual = titanic$Survived, Predicted = predictions)
print(confusion_matrix)
install.packages("rpart")
install.packages("rpart.plot")
# Load the necessary library
library(rpart)
# Load the Titanic dataset
titanic <- read.csv("titanic.csv")
# Data preprocessing: Handling missing values and feature selection
# For simplicity, we drop some columns with missing data and select relevant features
titanic <- titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
# Handling missing values by removing rows with missing data
titanic <- na.omit(titanic)
# Convert 'Sex' to a factor
titanic$Sex <- as.factor(titanic$Sex)
# Create a decision tree model for predicting survival (1 for survived, 0 for not survived)
tree_model <- rpart(Survived ~ ., data = titanic, method = "class")
# Print the decision tree
print(tree_model)
# Visualize the decision tree
library(rpart.plot)
prp(tree_model)
# Make predictions with the decision tree model
predictions <- predict(tree_model, newdata = titanic, type = "class")
# Evaluate the model
confusion_matrix <- table(Actual = titanic$Survived, Predicted = predictions)
print(confusion_matrix)
# Install and load necessary libraries
# install.packages("rpart")
# install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
# Load the Titanic dataset
titanic <- read.csv("titanic.csv")
# Data preprocessing: Handling missing values and feature selection
# For simplicity, we drop some columns with missing data and select relevant features
titanic <- titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
# Handling missing values by removing rows with missing data
titanic <- na.omit(titanic)
# Convert 'Sex' to a factor
titanic$Sex <- as.factor(titanic$Sex)
# Create a decision tree model for predicting survival (1 for survived, 0 for not survived)
tree_model <- rpart(Survived ~ ., data = titanic, method = "class")
# Print the decision tree
print(tree_model)
# Visualize the decision tree
prp(tree_model)
# Make predictions with the decision tree model
predictions <- predict(tree_model, newdata = titanic, type = "class")
# Evaluate the model
confusion_matrix <- table(Actual = titanic$Survived, Predicted = predictions)
print(confusion_matrix)
install.packages("rpart")
install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
titanic <- read.csv("D:\\S5\\ML\\exp7\\titanic.csv")
library(rpart)
library(rpart.plot)
titanic <- read.csv("titanic.csv")
head(titanic)
nrow(titanic)
titanic
titanic <- titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
titanic <- na.omit(titanic)
nrow(titanic)
head(titanic)
titanic
titanic$Sex <- as.factor(titanic$Sex)
tree_model <- rpart(Survived ~ ., data = titanic, method = "class")
print(tree_model)
prp(tree_model)
predictions <- predict(tree_model, newdata = titanic, type = "class")
predictions
confusion_matrix <- table(Actual = titanic$Survived, Predicted = predictions)
print(confusion_matrix)
# Install and load necessary libraries
# install.packages("rpart")
# install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
# Load the Titanic dataset
titanic <- read.csv("titanic.csv")
# Data preprocessing: Handling missing values and feature selection
# For simplicity, we drop some columns with missing data and select relevant features
titanic <- titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
# Handling missing values by removing rows with missing data
titanic <- na.omit(titanic)
# Convert 'Sex' to a factor
titanic$Sex <- as.factor(titanic$Sex)
# Create a decision tree model for predicting survival (1 for survived, 0 for not survived)
tree_model <- rpart(Survived ~ ., data = titanic, method = "class")
# Print the decision tree
print(tree_model)
# Visualize the decision tree
prp(tree_model)
# Make predictions with the decision tree model
predictions <- predict(tree_model, newdata = titanic, type = "class")
# Evaluate the model
confusion_matrix <- table(Actual = titanic$Survived, Predicted = predictions)
print(confusion_matrix)
# Install and load necessary libraries
# install.packages("rpart")
# install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
# Load the Titanic dataset
titanic <- read.csv("titanic.csv")
# Data preprocessing: Handling missing values and feature selection
# For simplicity, we drop some columns with missing data and select relevant features
titanic <- titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
# Handling missing values by removing rows with missing data
titanic <- na.omit(titanic)
# Create a decision tree model for predicting survival (1 for survived, 0 for not survived)
tree_model <- rpart(Survived ~ ., data = titanic, method = "class")
# Print the decision tree
print(tree_model)
# Visualize the decision tree
prp(tree_model)
# Make predictions with the decision tree model
predictions <- predict(tree_model, newdata = titanic, type = "class")
# Evaluate the model
confusion_matrix <- table(Actual = titanic$Survived, Predicted = predictions)
print(confusion_matrix)
# Install and load necessary libraries
# install.packages("rpart")
# install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
# Load the Titanic dataset
titanic <- read.csv("titanic.csv")
# Data preprocessing: Handling missing values and feature selection
# For simplicity, we drop some columns with missing data and select relevant features
titanic <- titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
# Handling missing values by removing rows with missing data
titanic <- na.omit(titanic)
# Create a decision tree model for predicting survival (1 for survived, 0 for not survived)
tree_model <- rpart(Survived ~ ., data = titanic, method = "class")
# Print the decision tree
print(tree_model)
# Visualize the decision tree
prp(tree_model)
# Make predictions with the decision tree model
predictions <- predict(tree_model, newdata = titanic, type = "class")
# Evaluate the model
confusion_matrix <- table(Actual = titanic$Survived, Predicted = predictions)
print(confusion_matrix)
# Install and load necessary libraries
# install.packages("rpart")
# install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
# Load the Titanic dataset
titanic <- read.csv("titanic.csv")
# Data preprocessing: Handling missing values and feature selection
# For simplicity, we drop some columns with missing data and select relevant features
titanic <- titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
# Handling missing values by removing rows with missing data
titanic <- na.omit(titanic)
# Convert 'Sex' to a factor
titanic$Sex <- as.factor(titanic$Sex)
# Create a decision tree model for predicting survival (1 for survived, 0 for not survived)
tree_model <- rpart(Survived ~ ., data = titanic, method = "class")
# Print the decision tree
print(tree_model)
# Visualize the decision tree
prp(tree_model)
# Make predictions with the decision tree model
predictions <- predict(tree_model, newdata = titanic, type = "class")
# Evaluate the model
confusion_matrix <- table(Actual = titanic$Sex, Predicted = predictions)
print(confusion_matrix)
# Install and load necessary libraries
# install.packages("rpart")
# install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
# Load the Titanic dataset
titanic <- read.csv("titanic.csv")
# Data preprocessing: Handling missing values and feature selection
# For simplicity, we drop some columns with missing data and select relevant features
titanic <- titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
# Handling missing values by removing rows with missing data
titanic <- na.omit(titanic)
# Convert 'Sex' to a factor
titanic$Sex <- as.factor(titanic$Sex)
# Create a decision tree model for predicting survival (1 for survived, 0 for not survived)
tree_model <- rpart(Survived ~ ., data = titanic, method = "class")
# Print the decision tree
print(tree_model)
# Visualize the decision tree
prp(tree_model)
# Make predictions with the decision tree model
predictions <- predict(tree_model, newdata = titanic, type = "class")
# Evaluate the model
confusion_matrix <- table(Actual = titanic$Survived, Predicted = predictions)
print(confusion_matrix)
Titanic
data("Titanic")
Titanic
View(titanic)
# Install and load necessary libraries
# install.packages("rpart")
# install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
# Load the Titanic dataset
titanic <- read.csv("titanic.csv")
# Data preprocessing: Handling missing values and feature selection
# For simplicity, we drop some columns with missing data and select relevant features
titanic <- titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
# Handling missing values by removing rows with missing data
titanic <- na.omit(titanic)
# Convert 'Sex' to a factor
titanic$Sex <- as.factor(titanic$Sex)
# Create a decision tree model for predicting survival (1 for survived, 0 for not survived)
tree_model <- rpart(Survived ~ ., data = titanic, method = "class")
# Print the decision tree
print(tree_model)
# Visualize the decision tree
prp(tree_model)
# Make predictions with the decision tree model
predictions <- predict(tree_model, newdata = titanic, type = "class")
# Evaluate the model
confusion_matrix <- table(Actual = titanic$Survived, Predicted = predictions)
print(confusion_matrix)
confusionMatrix(titanic$Survived, predictions)
# Evaluate the model
confusion_matrix <- table(Actual = titanic$Survived, Predicted = predictions)
print(confusion_matrix)
accuracy = sum(diag(confusion_matrix)) / sum(confusion_matrix)
accuracy
# Load the necessary libraries
library(rpart)
library(rpart.plot)
# Load the Titanic dataset
titanic <- read.csv("titanic.csv")
# Data preprocessing: Handling missing values and feature selection
titanic <- titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
# Handling missing values by removing rows with missing data
titanic <- na.omit(titanic)
# Convert 'Sex' to a factor
titanic$Sex <- as.factor(titanic$Sex)
# Split the data into training and testing sets
set.seed(123)
splitIndex <- createDataPartition(titanic$Survived, p = 0.8, list = FALSE)
train_data <- titanic[splitIndex, ]
test_data <- titanic[-splitIndex, ]
# Create a decision tree model for predicting survival (1 for survived, 0 for not survived)
tree_model <- rpart(Survived ~ ., data = train_data, method = "class")
# Print the decision tree
print(tree_model)
# Visualize the decision tree
prp(tree_model)
# Make predictions with the decision tree model
predictions <- predict(tree_model, newdata = test_data, type = "class")
# Evaluate the model
confusion_matrix <- table(Actual = test_data$Survived, Predicted = predictions)
print(confusion_matrix)
# Load the necessary libraries
library(rpart)
library(rpart.plot)
# Load the Titanic dataset
titanic <- read.csv("titanic.csv")
# Data preprocessing: Handling missing values and feature selection
titanic <- titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
# Handling missing values by removing rows with missing data
titanic <- na.omit(titanic)
# Convert 'Sex' to a factor
titanic$Sex <- as.factor(titanic$Sex)
# Split the data into training and testing sets
set.seed(123)
splitIndex <- createDataPartition(titanic$Survived, p = 0.8, list = FALSE)
train_data <- titanic[splitIndex, ]
test_data <- titanic[-splitIndex, ]
# Create a decision tree model for predicting survival (1 for survived, 0 for not survived)
tree_model <- rpart(Survived ~ ., data = train_data, method = "class")
# Print the decision tree
print(tree_model)
# Visualize the decision tree
prp(tree_model)
# Make predictions with the decision tree model
predictions <- predict(tree_model, newdata = test_data, type = "class")
# Evaluate the model
confusion_matrix <- table(Actual = test_data$Survived, Predicted = predictions)
print(confusion_matrix)
# Install and load necessary libraries
# install.packages("rpart")
# install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
# Load the Titanic dataset
titanic <- read.csv("titanic.csv")
# Data preprocessing: Handling missing values and feature selection
# For simplicity, we drop some columns with missing data and select relevant features
titanic <- titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
# Handling missing values by removing rows with missing data
titanic <- na.omit(titanic)
# Convert 'Sex' to a factor
titanic$Sex <- as.factor(titanic$Sex)
# Create a decision tree model for predicting survival (1 for survived, 0 for not survived)
tree_model <- rpart(Survived ~ ., data = titanic, method = "class")
# Print the decision tree
print(tree_model)
# Visualize the decision tree
prp(tree_model)
# Make predictions with the decision tree model
predictions <- predict(tree_model, newdata = titanic, type = "class")
# Evaluate the model
confusion_matrix <- table(Actual = titanic$Survived, Predicted = predictions)
print(confusion_matrix)
accuracy = sum(diag(confusion_matrix)) / sum(confusion_matrix)
accuracy
library(rpart)
library(rpart.plot)
titanic = read.csv('titanic.csv')
sum(is.na(titanic))
library(rpart)
library(rpart.plot)
titanic = read.csv('titanic.csv')
titanic = titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
sum(is.na(titanic))
sum(is.na(titanic))
titanic = na.omit(titanic)
sum(is.na(titanic))
decisionTree_model = rpart(Survived~., titanic, method = "class")
print(decisionTree_model)
rpart.plot(decisionTree_model)
decisionTree_predictor = predict(decisionTree_model, titanic)
decisionTree_predictor = predict(decisionTree_model, titanic)
rpart.plot(decisionTree_model)
decisionTree_predictor = predict(decisionTree_model, titanic)
decisionTree_model = rpart(Survived~., titanic, method = "class")
print(decisionTree_model)
decisionTree_predictor = predict(decisionTree_model, titanic)
rpart.plot(decisionTree_predictor)
prp(decisionTree_model)
confusion_matrix = table(titanic$Survived, decisionTree_predictor)
library(rpart)
library(rpart.plot)
titanic = read.csv('titanic.csv')
titanic = titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
sum(is.na(titanic))
titanic = na.omit(titanic)
sum(is.na(titanic))
titanic$Sex = as.factor(titanic$Sex)
decisionTree_model = rpart(Survived~., titanic, method = "class")
print(decisionTree_model)
decisionTree_predictor = predict(decisionTree_model, titanic)
prp(decisionTree_model)
confusion_matrix = table(titanic$Survived, decisionTree_predictor)
library(rpart)
library(rpart.plot)
titanic = read.csv('titanic.csv')
titanic = titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
sum(is.na(titanic))
titanic = na.omit(titanic)
sum(is.na(titanic))
titanic$Sex = as.factor(titanic$Sex)
titanic$Survived = factor(titanic$Survived)
decisionTree_model = rpart(Survived~., titanic, method = "class")
print(decisionTree_model)
decisionTree_predictor = predict(decisionTree_model, titanic)
prp(decisionTree_model)
confusion_matrix = table(titanic$Survived, decisionTree_predictor)
library(rpart)
library(rpart.plot)
titanic = read.csv('titanic.csv')
titanic = titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
sum(is.na(titanic))
titanic = na.omit(titanic)
sum(is.na(titanic))
titanic$Sex = as.factor(titanic$Sex)
titanic$Survived = factor(titanic$Survived)
decisionTree_model = rpart(Survived~., titanic, method = "class")
print(decisionTree_model)
decisionTree_predictor = predict(decisionTree_model, titanic)
prp(decisionTree_model)
confusion_matrix = table(titanic$Survived, decisionTree_predictor)
decisionTree_predictor = predict(decisionTree_model, titanic, type="class")
prp(decisionTree_model)
confusion_matrix = table(titanic$Survived, decisionTree_predictor)
confusion_matrix
library(rpart)
library(rpart.plot)
titanic = read.csv('titanic.csv')
titanic = titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
sum(is.na(titanic))
titanic = na.omit(titanic)
titanic$Sex = as.factor(titanic$Sex)
decisionTree_model = rpart(Survived~., titanic, method = "class")
print(decisionTree_model)
decisionTree_predictor = predict(decisionTree_model, titanic, type="class")
prp(decisionTree_model)
confusion_matrix = table(titanic$Survived, decisionTree_predictor)
confusion_matrix
iris_df = as.data.frame(iris)
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram(color="red", fill="black", bins=20,)
library(rpart)
library(rpart.plot)
titanic = read.csv('titanic.csv')
titanic = titanic[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Survived")]
sum(is.na(titanic))
titanic = na.omit(titanic)
titanic$Sex = as.factor(titanic$Sex)
decisionTree_model = rpart(Survived~., titanic, method = "class")
print(decisionTree_model)
prp(decisionTree_model)
decisionTree_predictor = predict(decisionTree_model, titanic, type="class")
confusion_matrix = table(titanic$Survived, decisionTree_predictor)
confusion_matrix
